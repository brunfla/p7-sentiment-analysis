plots:
  - data/output/experiments/logistic_tfidf/plots/metrics_plot.png
  - data/output/experiments/distilbert/plots/metrics_plot.png
  
stages:
# Diviser les données en ensembles d'entraînement, validation et test.
  split_data_train_val_test:
    cmd: python src/data_preparation/split_data_train_val_test.py
    deps:
      - data/input/training.1600000.processed.noemoticon.utf-8.csv
      - src/data_preparation/split_data_train_val_test.py
    outs:
      - data/output/preprocessed/train_val_test/x_train.csv
      - data/output/preprocessed/train_val_test/y_train.csv
      - data/output/preprocessed/train_val_test/x_val.csv
      - data/output/preprocessed/train_val_test/y_val.csv
      - data/output/preprocessed/train_val_test/x_test.csv
      - data/output/preprocessed/train_val_test/y_test.csv
    params:
      - split_data_train_val_test.text_column
      - split_data_train_val_test.label_column
      - split_data_train_val_test.test_size
      - split_data_train_val_test.val_size
      - split_data_train_val_test.random_state

  plot_data_stats_train_val_test:
    cmd: python src/data_preparation/plot_data_stats.py plot_data_stats_train_val_test
    deps:
      - data/output/preprocessed/train_val_test/x_train.csv
      - data/output/preprocessed/train_val_test/x_val.csv
      - data/output/preprocessed/train_val_test/x_test.csv

  # Nettoyage initial des données (suppression des caractères inutiles, gestion des valeurs manquantes, etc.).
  clean_tweet_base:
    cmd: python src/data_preparation/clean_tweet_base.py
    deps:
      - data/output/preprocessed/train_val_test/x_train.csv
      - data/output/preprocessed/train_val_test/x_val.csv
      - data/output/preprocessed/train_val_test/x_test.csv
      - data/output/preprocessed/train_val_test/y_train.csv
      - data/output/preprocessed/train_val_test/y_val.csv
      - data/output/preprocessed/train_val_test/y_test.csv
      - src/data_preparation/clean_tweet_base.py
    outs:
      - data/output/preprocessed/clean_tweet_base/x_train.csv
      - data/output/preprocessed/clean_tweet_base/x_val.csv
      - data/output/preprocessed/clean_tweet_base/x_test.csv
      - data/output/preprocessed/clean_tweet_base/y_train.csv
      - data/output/preprocessed/clean_tweet_base/y_val.csv
      - data/output/preprocessed/clean_tweet_base/y_test.csv

# Préparer les données pour une compatibilité avec les vecteurs GloVe.
  clean_tweet_glove:
    cmd: python src/data_preparation/clean_tweet_glove.py
    deps:
      - data/output/preprocessed/clean_tweet_base/x_train.csv
      - data/output/preprocessed/clean_tweet_base/x_val.csv
      - data/output/preprocessed/clean_tweet_base/x_test.csv
      - data/output/preprocessed/clean_tweet_base/y_train.csv
      - data/output/preprocessed/clean_tweet_base/y_val.csv
      - data/output/preprocessed/clean_tweet_base/y_test.csv
      - data/input/glove.twitter.27B.50d.txt
      - src/data_preparation/clean_tweet_glove.py
    outs:
      - data/output/preprocessed/clean_tweet_glove/x_train.csv
      - data/output/preprocessed/clean_tweet_glove/x_val.csv
      - data/output/preprocessed/clean_tweet_glove/x_test.csv
      - data/output/preprocessed/clean_tweet_glove/y_train.csv
      - data/output/preprocessed/clean_tweet_glove/y_val.csv
      - data/output/preprocessed/clean_tweet_glove/y_test.csv
    params:
    - clean_tweet_glove.glove_similarity_threshold

  plot_data_stats_clean_tweet_glove:
    cmd: python src/data_preparation/plot_data_stats.py plot_data_stats_clean_tweet_glove
    deps:
      - data/output/preprocessed/clean_tweet_glove/x_train.csv
      - data/output/preprocessed/clean_tweet_glove/x_val.csv
      - data/output/preprocessed/clean_tweet_glove/x_test.csv

  batch_prepare_tfidf_vectors:
    cmd: python src/data_preparation/batch_prepare_tfidf_vectors.py
    deps:
    - data/output/preprocessed/clean_tweet_glove/x_train.csv
    - data/output/preprocessed/clean_tweet_glove/x_val.csv
    - data/output/preprocessed/clean_tweet_glove/x_test.csv
    - src/data_preparation/batch_prepare_tfidf_vectors.py
    outs:
    - data/output/preprocessed/tfidf_vectorizer/x_train_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/x_val_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/x_test_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/y_train.csv
    - data/output/preprocessed/tfidf_vectorizer/y_val.csv
    - data/output/preprocessed/tfidf_vectorizer/y_test.csv
    params:
    - batch_apply_tfidf_vectorizer.max_length

  train_logistic_tfidf:
    cmd: python src/train_model/train_logistic_tfidf.py
    deps:
    - data/output/preprocessed/tfidf_vectorizer/x_train_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/x_val_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/y_train.csv
    - data/output/preprocessed/tfidf_vectorizer/y_val.csv
    - src/train_model/train_logistic_tfidf.py
    outs:
    - data/output/trained_models/logistic_sgd/mlflow_id.json
    - data/output/trained_models/logistic_sgd/model.pkl

  test_model_logistic:
    cmd: python src/test_model/test_model_logistic.py
    deps:
    - data/output/preprocessed/tfidf_vectorizer/x_test_vec.pkl
    - data/output/preprocessed/tfidf_vectorizer/y_test.csv
    - src/test_model/test_model_logistic.py  

  batch_prepare_glove_vectors:
    cmd: python src/data_preparation/batch_prepare_glove_vectors.py
    deps:
    - data/output/preprocessed/clean_tweet_glove/x_train.csv
    - data/output/preprocessed/clean_tweet_glove/x_val.csv
    - data/output/preprocessed/clean_tweet_glove/x_test.csv
    - data/output/preprocessed/clean_tweet_glove/y_train.csv
    - data/output/preprocessed/clean_tweet_glove/y_val.csv
    - data/output/preprocessed/clean_tweet_glove/y_test.csv
    - data/input/glove.twitter.27B.50d.txt
    - src/data_preparation/batch_prepare_glove_vectors.py
    outs:
    - data/output/preprocessed/glove_vectors/x_train_glove.pkl
    - data/output/preprocessed/glove_vectors/x_val_glove.pkl
    - data/output/preprocessed/glove_vectors/x_test_glove.pkl
    - data/output/preprocessed/glove_vectors/y_train.csv
    - data/output/preprocessed/glove_vectors/y_val.csv
    - data/output/preprocessed/glove_vectors/y_test.csv
    params:
    - batch_prepare_glove_vectors.glove_file
    - batch_prepare_glove_vectors.max_length
    - batch_prepare_glove_vectors.embedding_dim

  train_lstm_bidirectional_with_glove:
    cmd: python src/train_model/train_lstm_bidirectional_with_glove.py
    deps:
    - data/output/preprocessed/glove_vectors/x_train_glove.pkl
    - data/output/preprocessed/glove_vectors/x_val_glove.pkl
    - data/output/preprocessed/glove_vectors/y_train.csv
    - data/output/preprocessed/glove_vectors/y_val.csv
    outs:
    - data/output/trained_models/lstm_bidirectional/bilstm_model.h5

  test_lstm_bidirectional_with_glove:
    cmd: python src/test_model/test_lstm_bidirectional_with_glove.py
    deps:
    - data/output/trained_models/lstm_bidirectional/bilstm_model.h5
    - data/output/preprocessed/glove_vectors/x_test_glove.pkl
    - data/output/preprocessed/glove_vectors/y_test.csv

  train_model_distilbert_ktrain:
    cmd: python src/train_model/train_model_distilbert_ktrain.py
    deps:
    - data/output/preprocessed/clean_tweet_glove/x_train.csv
    - data/output/preprocessed/clean_tweet_glove/y_train.csv
    - data/output/preprocessed/clean_tweet_glove/x_val.csv
    - data/output/preprocessed/clean_tweet_glove/y_val.csv
    - src/train_model/train_model_distilbert_ktrain.py
    outs:
    - data/output/trained_models/distilbert-base-uncased/mlflow_id.json 

  test_model_distilbert_ktrain:
    cmd: python src/test_model/test_model_distilbert_ktrain.py
    deps:
    - data/output/trained_models/distilbert-base-uncased/mlflow_id.json
    - data/output/preprocessed/clean_tweet_glove/x_test.csv
    - data/output/preprocessed/clean_tweet_glove/y_test.csv
    - src/test_model/test_model_distilbert_ktrain.py

  build_and_test_api:
    cmd: src/deploy/build_and_test_api.sh
    deps:
    - Dockerfile
    - data/output/trained_models/distilbert-base-uncased/mlflow_id.json
    - data/output/preprocessed/clean_tweet_glove/x_test.csv
    - data/output/preprocessed/clean_tweet_glove/y_test.csv
    - src/deploy/test_api.py
    - src/deploy/build_and_test_api.sh
